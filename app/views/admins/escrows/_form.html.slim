.text-3xl.text-red-600.pt-10 Transaction Summary
br
br
= simple_form_for [:user, @escrow] do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .form-inputs
    = f.input :vendor_roles, as: :hidden
    = f.input :roles, as: :radio_buttons, collection: Escrow.roles.keys.to_a
    br
    = f.label :payment_for, "Payment Purpose" , class: 'text-sm font-medium text-gray-600 block'
    = f.input_field :payment_for, as: :select, collection: ["Goods", "Services"], class: "shadow appearance-none border border-gray-300 rounded w-full py-2 px-3 bg-white focus:outline-none focus:ring-0 focus:border-blue-500 text-gray-400 leading-6 transition-colors duration-200 ease-in-out"
    br
    br
    = f.input :payment_amount, label: "Invoice Amount" 
    br
    = f.label :transaction_fee, "Transaction Fee" , class: 'text-sm font-medium text-gray-600 block'
    strong RM #{f.input_field :transaction_fees, value: 2, class: 'font-bold', readonly: true} 
    br

  .text-3xl.text-red-600.pt-10 Transaction Details
  br
  br
  .form-inputs
    = f.label :user_email, "User Email" , class: 'text-sm font-medium text-gray-600 block'
    = f.input_field :user_email, value: current_user.email, class: 'font-bold', readonly: true
    br
    br
    = f.input :vendor_email

    = f.input :description
    
    = f.input :invoice
    br



  .form-actions.flex.justify-end
    = f.button :submit